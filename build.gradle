plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'com.diffplug.spotless' version '5.15.0'
}

group = 'com.bci'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.h2database:h2'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-resource-server
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server', version: '2.5.15'
	// https://mvnrepository.com/artifact/org.springframework.security.oauth.boot/spring-security-oauth2-autoconfigure
	implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.5.14'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.mockito:mockito-core'
}

jacoco {
	toolVersion = "0.8.7"
}
tasks.named('test') {
	useJUnitPlatform()
}

tasks.test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
	reports {
		html.destination file("htmlReport/reports/jacoco/html")
		xml.required = false
		csv.required = false
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['com/bci/users/controllers/**',
										'com/bci/users/responses/**',
										'com/bci/users/requests/**',
										'com/bci/users/auth/**',
										'com/bci/users/exceptions/**'
										,'com/bci/users/entities/**'])
		})
	}
}
spotless {
	java {
		googleJavaFormat()
	}
}
